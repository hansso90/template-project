plugins {
    id 'org.springframework.boot'
    id 'se.thinkcode.cucumber-runner' version '0.0.8'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    testImplementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.platform:junit-platform-suite"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"

    testImplementation "org.assertj:assertj-core:${assertjVersion}"

    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "io.rest-assured:json-path:${restAssuredVersion}"
    testImplementation "io.rest-assured:xml-path:${restAssuredVersion}"
    testImplementation "io.rest-assured:rest-assured-common:${restAssuredVersion}"
}

cucumber {
    main = 'io.cucumber.core.cli.Main'
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--object-factory', 'io.cucumber.spring.SpringFactory',
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'com.example',
                    'src/test/resources/features']
        }
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
